apiVersion: v1
kind: Service
metadata:
  labels: 
    app: loadgenerator
  name: loadgenerator
spec:
  ports:
  - port: 5557
    name: comm
  - port: 8089
    name: web-ui
  - port: 5558
    name: comm-plus-one
  selector:
    app: loadgenerator
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  labels:
    app: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000

      containers:
      - name: loadgenerator
        volumeMounts:
        - name: load-logs
          mountPath: /stats

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: false
        image: docker.io/eberkley/loadgen:4a051c03
        imagePullPolicy: IfNotPresent
        # image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.10.0
        env:
        - name: LOCUST_MODE
          value: MASTER

        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"

        resources:
          limits:
            cpu: 300m
            memory: 512Mi

        ports:
        - containerPort: 5557
          name: comm
        - containerPort: 5558
          name: comm-plus-one
        - containerPort: 8089
          name: web-ui
      volumes:
      - name: load-logs
        emptyDir:
          sizeLimit: 300Mi


---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: loadgenerator-worker
  name: loadgenerator-worker
spec:
  replicas: 4
  selector:
    matchLabels:
      app: loadgenerator-worker
  template:
    metadata:
      labels:
        app: loadgenerator-worker
    spec:
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000

      containers:
      - name: loadgenerator-worker
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true


        image: docker.io/eberkley/loadgen:4a051c03
        imagePullPolicy: IfNotPresent
        env:
        - name: LOCUST_MODE
          value: WORKER

        - name: LOCUST_MASTER
          value: loadgenerator
        
        - name: FRONTEND_ADDR
          value: "frontend:80"

        resources:
          requests: 
            memory: "512Mi"
            cpu: "1"
          limits:
            memory: "512Mi"
            cpu: "1"


# ---
# apiVersion: autoscaling/v2
# kind: HorizontalPodAutoscaler
# metadata:
#   annotations:
#     description: This HorizontalPodAutoscaler scales the "loadgenerator-worker"
#       Deployment.
#   labels:
#     serviceweaver/app: onlineboutique
#   name: loadgenerator-worker
#   namespace: default
# spec:
#   maxReplicas: 10
#   metrics:
#   - resource:
#       name: cpu
#       target:
#         averageUtilization: 75
#         type: Utilization
#     type: Resource
#   minReplicas: 1
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: loadgenerator-worker
